/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE  0
#define MEDIA 1
#define NAV   2
#define MOUSE 3
#define SYM   4
#define NUM   5
#define FUN   6
#define GAME  7

&mt {
        tapping-term-ms = <175>;
        flavor = "balanced";
};
&lt {
        tapping-term-ms = <175>;
        flavor = "balanced";
};

/ {
        behaviors {
                td_boot: tap_dance_boot {
                        compatible = "zmk,behavior-tap-dance";
                        #binding-cells = <0>;
                        tapping-term-ms = <200>;
                        bindings = <&none>, <&bootloader>;
                };
                td_game: tap_dance_game {
                        compatible = "zmk,behavior-tap-dance";
                        #binding-cells = <0>;
                        tapping-term-ms = <200>;
                        bindings = <&none>, <&tog GAME>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                base_layer {
                        bindings = <
&kp TILDE  &kp Q       &kp W         &kp F         &kp P         &kp B       &kp J      &kp L        &kp U        &kp Y       &kp SEMI   &kp BSLH
&kp CAPS   &mt LGUI A  &mt LALT R    &mt LCTRL S   &mt LSHFT T   &kp G       &kp M      &mt RSHFT N  &mt RCTRL E  &mt RALT I  &mt RGUI O &kp SQT
&kp LSHFT  &kp Z       &kp X         &kp C         &kp D         &kp V       &kp K      &kp H        &kp COMMA    &kp DOT     &kp FSLH   &kp RSHFT
                       &lt MEDIA ESC &lt NAV SPACE &lt MOUSE TAB                        &lt SYM RET  &lt NUM BSPC &lt FUN DEL
                        >;
                };
                media_layer {
                        bindings = <
&none      &td_boot    &none         &none         &none         &none       &none      &none        &none        &none        &none        &none
&none      &kp LGUI    &kp LALT      &kp LCTRL     &kp LSHFT     &none       &none      &kp C_PREV   &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT   &none
&none      &none       &none         &none         &none         &none       &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &none
                                     &none         &none         &none       &kp C_STOP &kp C_PLAY   &kp C_MUTE
                        >;
                };
                navigation_layer {
                        bindings = <
&none      &td_boot    &none         &none         &none         &none       &none      &none       &none        &none       &none      &none
&none      &kp LGUI    &kp LALT      &kp LCTRL     &kp LSHFT     &none       &caps_word &kp LEFT    &kp DOWN     &kp UP      &kp RIGHT  &none
&none      &none       &none         &none         &none         &none       &none      &kp HOME    &kp PG_DN    &kp PG_UP   &kp END    &none
                                     &none         &none         &none       &none      &none       &none
                        >;
                };
                // Don't really want to do mouse emulation
                mouse_layer {
                        bindings = <
&none      &td_boot    &none         &none         &none         &none       &none      &none       &none        &none       &none      &none
&none      &kp LGUI    &kp LALT      &kp LCTRL     &kp LSHFT     &none       &none      &none       &none        &none       &none      &none
&none      &none       &none         &none         &none         &none       &none      &none       &none        &none       &none      &none
                                     &none         &none         &none       &none      &none       &none
                        >;
                };
                symbols_layer {
                        bindings = <
&none      &kp LBRC    &kp AMPS      &kp ASTRK     &kp LPAR      &kp RBRC    &none      &none       &none        &td_game    &td_boot   &none
&none      &kp COLON   &kp DLLR      &kp PRCNT     &kp CARET     &kp PLUS    &none      &kp RSHFT   &kp RCTRL    &kp RALT    &kp RGUI   &none
&none      &kp TILDE   &kp EXCL      &kp AT        &kp POUND     &kp PIPE    &none      &none       &none        &none       &none      &none
                                     &kp LPAR      &kp RPAR      &kp UNDER   &none      &none       &none
                        >;
                };
                numbers_layer {
                        bindings = <
&none      &kp LBKT    &kp N7        &kp N8        &kp N9        &kp RBKT    &none      &none       &none        &td_game    &td_boot   &none
&none      &kp SEMI    &kp N4        &kp N5        &kp N6        &kp EQUAL   &none      &kp RSHFT   &kp RCTRL    &kp RALT    &kp RGUI   &none
&none      &kp GRAVE   &kp N1        &kp N2        &kp N3        &kp BSLH    &none      &none       &none        &none       &none      &none
                                     &kp DOT       &kp N0        &kp MINUS   &none      &none       &none
                        >;
                };
                function_layer {
                        bindings = <
&kp F12    &kp F7      &kp F8        &kp F9        &kp PSCRN     &none       &none      &none       &none        &td_game    &td_boot   &none
&kp F11    &kp F4      &kp F5        &kp F6        &none         &none       &none      &kp RSHFT   &kp RCTRL    &kp RALT    &kp RGUI   &none
&kp F10    &kp F1      &kp F2        &kp F3        &none         &none       &none      &none       &none        &none       &none      &none
                                     &none         &none         &none       &none      &none       &none
                        >;
                };
                gaming_layer {
                        bindings = <
&kp TAB    &kp Q       &kp W         &kp E         &kp R         &kp T       &kp Y        &kp U        &kp I        &kp O       &kp P      &tog GAME
&kp LSHFT  &kp A       &kp S         &kp D         &kp F         &kp G       &kp H        &kp J        &kp K        &kp L       &kp SEMI   &kp SQT
&kp LCTRL  &kp Z       &kp X         &kp C         &kp V         &kp B       &kp N        &kp M        &kp COMMA    &kp DOT     &kp FSLH   &kp RSHFT
                                     &kp ESC       &kp SPACE     &mo LALT    &lt SYM RET  &lt NUM BSPC &lt FUN DEL
                        >;
                };
        };
};
